# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
 - stage: Build_Stage
   displayName: 
   jobs:
   - job: BuildNuget
     displayName: Build Nuget Package
     variables:
      BuildConfiguration: release
     steps:
      - task: UseDotNet@2
        displayName: 'Use .NET Core SDK'
        inputs:
          packageType: 'sdk'
          version: '6.x'  # Change based on your project

      - script: dotnet restore
        displayName: 'Restore dependencies'

      - script: dotnet build --configuration Release
        displayName: 'Build project'

      - script: dotnet pack --configuration Release --output $(Build.ArtifactStagingDirectory)
        displayName: 'Create NuGet Package'

      - task: NuGetAuthenticate@1
        displayName: 'Authenticate to Azure Artifacts'

      - script: dotnet nuget push $(Build.ArtifactStagingDirectory)/*.nupkg --source "https://dev.azure.com/PGonzalez2/TestToLearn/_artifacts/feed/PGonzalez2" --api-key AzureArtifacts
        displayName: 'Publish to Azure Artifacts'

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Package to Pipeline Artifacts'
        inputs:
          pathToPublish: '$(Build.ArtifactStagingDirectory)'
          artifactName: 'NuGetPackage'
      
      - task: DotNetCoreCLI@2
        displayName: Push Nuget Package
        inputs:
          command: 'push'
          packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
          nuGetFeedType: 'internal'
          publishVstsFeed: 'PGonzalez2'
